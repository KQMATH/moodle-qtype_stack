define(["jquery","./mathquill"],function(t,s){class e{constructor(t,s,e,a){this.lastFocusedInput=a,this.name=t,this.text=s,this.onClick=e,this.$element=null}enable(){if(null!==this.$element)return;let s=document.createElement("button");this.$element=t(s),this.$element.html(this.text),this.$element.addClass("visual-math-input-control btn btn-primary"),this.$element.on("click",t=>{t.preventDefault(),null!==this.lastFocusedInput.input&&(this.onClick(this.lastFocusedInput.input.field),this.lastFocusedInput.input.field.focus())})}}return{Input:class{constructor(e,a,n){this.$input=t(e),this.$parent=t(a),this.lastFocusedInput=n;let i=document.createElement("div");this.wrapper=t(i).addClass("visual-math-input-field");let l=s.getInterface(2);this.field=l.MathField(i,{spaceBehavesLikeTab:!0,handlers:{edit:s=>{this.onEdit(t(e),s)}}}),this.$parent.append(i),this.onEdit=((t,s)=>t.val("\\[ "+s.latex()+" \\]")),this.$textarea.on("blur",()=>this.lastFocusedInput.input=this)}get $textarea(){return t(this.field.el()).find("textarea")}enable(){this.$textarea.prop("disabled",!1)}disable(){this.$textarea.prop("disabled",!0)}},StaticInput:class{constructor(e,a){this.$input=t(e),this.$parent=t(a);let n=document.createElement("div");this.wrapper=t(n).addClass("visual-math-input-field");let i=s.getInterface(2);this.field=i.StaticMath(n,{spaceBehavesLikeTab:!0}),this.$parent.append(n)}},Control:e,ControlList:class{constructor(s,e){this.controls=[],this.lastFocusedInput=e,this.$wrapper=t(s),this.$wrapper.addClass("visualmathinputwrapper"),this.defineDefault()}define(t,s,a){this.controls[t]=new e(t,s,a,this.lastFocusedInput)}enable(t){for(let s of t){let t=this.controls[s];t.enable(),this.$wrapper.append(t.$element)}}enableAll(){for(let t in this.controls){let s=this.controls[t];s.enable(),this.$wrapper.append(s.$element)}}defineDefault(){let t='<div class="mq-math-mode" style="cursor:pointer;font-size:100%;">';t+='<span class="mq-root-block">',t+='<span class="mq-non-leaf">',t+='<span class="mq-paren mq-scaled" style="transform: scale(0.8, 1.5);">(</span>',t+='<span class="mq-non-leaf" style="margin-top:0;">',t+='<span class="mq-array mq-non-leaf">',t+='<span style="font-size: 14px;"><var>n</var></span>',t+='<span style="font-size: 14px;"><var>k</var></span>',t+="</span></span>",t+='<span class="mq-paren mq-scaled" style="transform: scale(0.8, 1.5);">)</span></span>',t+="</span></div>";let s='<div class="mq-math-mode" style="cursor:pointer;font-size:100%;">';s+='<span class="mq-root-block">',s+="<var>x</var>",s+='<span class="mq-supsub mq-non-leaf mq-sup-only">',s+='<span class="mq-sup">',s+="<var>y</var>",s+="</span></span></span></div>",this.define("sqrt",'<span class="mq-root-block">&radic;</span>',t=>t.cmd("\\sqrt")),this.define("int",'<span class="mq-root-block">&int;</span>',t=>t.cmd("\\int")),this.define("sum",'<span class="mq-root-block"><span class="mq-large-operator mq-non-leaf">&sum;</span></span>',t=>t.cmd("\\sum")),this.define("lim",'<span class="mq-root-block">lim</span>',t=>{t.cmd("\\lim").typedText("_").write("x").cmd("\\to").write("0").moveToRightEnd()}),this.define("nchoosek",t,t=>t.cmd("\\choose")),this.define("divide",'<span class="mq-root-block">/</span>',t=>t.cmd("\\frac")),this.define("plusminus",'<span class="mq-root-block">&plusmn;</span>',t=>t.cmd("\\pm")),this.define("theta",'<span class="mq-root-block">&theta;</span>',t=>t.cmd("\\theta")),this.define("pi",'<span class="mq-root-block">&pi;</span>',t=>t.cmd("\\pi")),this.define("infinity",'<span class="mq-root-block">&infin;</span>',t=>t.cmd("\\infinity")),this.define("caret",s,t=>t.cmd("^"))}}}});